---
variables:
  TF_HTTP_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${ENV}
  TF_HTTP_LOCK_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${ENV}/lock
  TF_HTTP_UNLOCK_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${ENV}/lock
  TF_HTTP_LOCK_METHOD: POST
  TF_HTTP_UNLOCK_METHOD: DELETE

stages:
  - review
  - validate
  - plan
  - deploy
  - verify

set_deploy_env:stage:
  stage: review
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - echo "ENV=stage" >> review.env
  artifacts:
    reports:
      dotenv: review.env

set_deploy_env:prod:
  stage: review
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - echo "ENV=prod" >> review.env
  artifacts:
    reports:
      dotenv: review.env

tf_validate:
  stage: validate
  rules:
    - when: always
  needs: []
  image:
    name: "hashicorp/terraform:1.3.7"
    entrypoint: [""]
  script:
    - terraform init
    - terraform validate
    - terraform fmt -check=true

tf_plan:
  stage: plan
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  needs:
    - job: set_deploy_env:stage
      optional: true
    - job: set_deploy_env:prod
      optional: true
    - job: tf_validate
  image:
    name: "hashicorp/terraform:1.3.7"
    entrypoint: [""]
  script:
    - echo $TF_HTTP_ADDRESS
    - terraform init
    - terraform plan  -var-file=common.tfvars -var-file=$ENV.env.tfvars -out plan
  artifacts:
    name: plan
    paths:
      - plan

tf_apply:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  needs:
    - job: set_deploy_env:stage
      optional: true
    - job: set_deploy_env:prod
      optional: true
    - job: tf_plan
  image:
    name: "hashicorp/terraform:1.3.7"
    entrypoint: [""]
  script:
    - terraform init
    - terraform apply plan

verify:
  stage: verify
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  needs:
    - job: set_deploy_env:stage
      optional: true
    - job: set_deploy_env:prod
      optional: true
    - job: tf_apply
  image:
    name: "shdu/pyats-genie:latest"
    entrypoint: [""]
  script:
    - cd tests
    - source /pyats/bin/activate
    - pyats run job test_job.py -t $ENV.yml
